<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">	
    
	<!-- DATA SOURCE -->
	<context:property-placeholder location="classpath*:/db_connection.properties" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<!-- Init. of JDBC bean -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:password-encoder ref="encoder" />
			<sec:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username, password_encrypted, enabled from persons where username=? and enabled = 1"
				authorities-by-username-query="select u.username, r.role from persons u JOIN user_authority ua ON (u.id = ua.user_id) JOIN roles r ON (r.id = ua.role_id) WHERE u.username = ?" />
		</sec:authentication-provider>
	</sec:authentication-manager>
	
</beans>
